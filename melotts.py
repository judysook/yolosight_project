# -*- coding: utf-8 -*-
"""MeloTTS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11yWq9zgAr95GgE8iGZXrQiSjAXLSdT08
"""

# Commented out IPython magic to ensure Python compatibility.
# 런타임 유형 변경 > 하드웨어 가속기: GPU 선택

# 기본 도구 설치
!sudo apt-get update -y
!sudo apt-get install -y libsndfile1 ffmpeg

# git clone
!git clone https://github.com/judysook/yolosight_project.git
# %cd yolosight_project

!rm -rf /usr/local/lib/python3.11/dist-packages/~umpy*

# 또는 직접 필요한 패키지 설치
!pip install torch torchaudio tensorboard einops librosa
!pip install -U matplotlib numpy scipy tqdm

!pip install numpy==1.26.4

# 2. 기본 pip 패키지 설치 (MeloTTS 기반)
!pip install -U pip wheel setuptools
!pip install torch torchaudio
!pip install numpy librosa matplotlib pyyaml soundfile scipy tqdm

# 3. (옵션) Web UI 사용 시
!pip install gradio flask

# 4. 학습용 데이터 전처리
# 예: yolosight_project/melo/data/example/metadata.list 파일을 이용
!python melo/preprocess_text.py --metadata melo/data/example/metadata.list

# 5. 학습 실행 (config 파일 필요)
# 예: config.json 경로를 아래처럼 설정 (파일 경로에 따라 수정 가능)
!python melo/train.py --config melo/data/example/config.json

!pwd

# 기본 패키지 (이미 대부분 설치되어 있음)
!pip install numpy==1.26.4 scipy==1.15.3 librosa==0.11.0 matplotlib==3.10.3 tqdm soundfile pyyaml

# TTS 관련
!pip install torch torchaudio transformers phonemizer g2p-en g2pkk inflect pypinyin unidecode regex

# 텍스트 전처리, 파일 관리
!pip install nltk opencv-python jamo loguru

# AWS와 huggingface 연동
!pip install boto3 s3transfer huggingface-hub safetensors

# 웹 인터페이스
!pip install gradio flask fastapi

# 기타 유틸리티
!pip install pyqtgraph rich click

import nltk
nltk.download('punkt')  # MeloTTS가 쓸 수 있음

!pip install jamo

# 1. sys.path 추가
import sys
sys.path.append('/content/drive/MyDrive/Colab Notebooks/MeloTTS-main')

# Commented out IPython magic to ensure Python compatibility.
# Colab 초기 경로로 이동
# %cd /content

# Drive 마운트
from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
##전처리
# !python "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/preprocess_text.py" \
#   --metadata "./metadata.list"
!pip install jamo phonemizer librosa textgrid

# %cd /content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo
!python preprocess_text.py --metadata metadata.list

# Commented out IPython magic to ensure Python compatibility.
#여기부터 에러.
## 학습
# 1. 디렉토리 이동
# %cd '/content/drive/MyDrive/Colab Notebooks/MeloTTS-main'

# 2. 경로 등록
import sys
sys.path.append(".")

# 3. 학습 실행 (절대경로 ❌, 상대경로 ⭕)
#!python melo/train.py --config_path melo/config.json
import json

with open("melo/config.json", "r", encoding="utf-8") as f:
    config = json.load(f)

config['data']['training_files'] = "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/train.list"
config['data']['validation_files'] = "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/val.list"

with open("melo/config.json", "w", encoding="utf-8") as f:
    json.dump(config, f, indent=2, ensure_ascii=False)

print("✅ config 파일 경로 수정 완료")

!python melo/train.py --config melo/config.json

import os

train_list_path = "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/data/example/train.list"

with open(train_list_path, encoding="utf-8") as f:
    for line in f:
        path = line.strip().split("|")[0]
        exists = os.path.exists(path)
        print(f"{path} -> {'✅ 존재함' if exists else '❌ 없음'}")

hop_length = 512
min_text_len = 10
max_text_len = 1000

# with open("melo/data/example/train.list", encoding="utf-8") as f:
#     for line in f:
#         parts = line.strip().split("|")
#         audiopath = parts[0]
#         text = parts[3]  # 또는 4번째가 텍스트인 경우
#         length = os.path.getsize(audiopath) // (2 * hop_length)
#         text_len = len(text.split())

#         print(f"🧪 {audiopath} -> 길이: {length}, 텍스트 길이: {text_len}")

#         if length < min_text_len or length > max_text_len:
#             print("❌ 필터에 걸림")
#         else:
#             print("✅ 학습 포함 대상")

with open("melo/data/example/train.list", encoding="utf-8") as f:
    for line in f:
        parts = line.strip().split("|")
        print(f"📄 항목 개수: {len(parts)} → {parts}")  # 디버깅용 출력

        if len(parts) < 4:
            print("⚠️ 항목 부족: 스킵됨")
            continue

        audiopath = parts[0]
        text = parts[3]
        length = os.path.getsize(audiopath) // (2 * hop_length)
        text_len = len(text.split())

        print(f"🧪 {audiopath} -> 길이: {length}, 텍스트 길이: {text_len}")

        if length < min_text_len or length > max_text_len:
            print("❌ 필터에 걸림")
        else:
            print("✅ 학습 포함 대상")

import os

hop_length = 512
min_text_len = 1
max_text_len = 300

with open("melo/data/example/train.list", encoding="utf-8") as f:
    for line in f:
        parts = line.strip().split("|")
        if len(parts) < 4:
            print(f"⚠️ 항목 이상: {parts}")
            continue

        audiopath = parts[0]
        text = parts[3]
        text_len = len(text.split())

        try:
            size = os.path.getsize(audiopath)
            length = size // (2 * hop_length)
            print(f"📁 {audiopath} → 파일크기: {size}, frame 수: {length}, 텍스트 길이: {text_len}")

            if length < min_text_len or length > max_text_len:
                print("❌ 필터에 걸림")
            else:
                print("✅ 학습 포함")
        except Exception as e:
            print(f"🚫 getsize 실패: {audiopath} → {e}")

!pwd
!ls '/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/'

# train.list 경로 절대경로로 바꾸기
train_path = "melo/train.list"

with open(train_path, "r", encoding="utf-8") as f:
    lines = f.readlines()

new_lines = []
for line in lines:
    parts = line.strip().split("|")
    if len(parts) == 3:
        wav_path = parts[0]
        if not wav_path.startswith("/"):
            # 상대경로를 절대경로로 바꿈
            wav_path = "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/" + wav_path
        new_lines.append(f"{wav_path}|{parts[1]}|{parts[2]}\n")

# 실제로 파일에 다시 저장
with open(train_path, "w", encoding="utf-8") as f:
    f.writelines(new_lines)

# Commented out IPython magic to ensure Python compatibility.
# 1. Colab 루트 경로로 이동
# %cd /content

# 2. 필요한 패키지 설치
!pip install jamo

# 3. MeloTTS 전체 복사 (한 번만!)
#!cp -r "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo" .

# 4. 전처리 실행 (올바른 옵션 사용!)
!python melo/preprocess_text.py --config_path melo/data/example/config.json

# 5. 학습 실행
!python melo/train.py --config melo/data/example/config.json

# Commented out IPython magic to ensure Python compatibility.

# 1. 현재 작업 디렉토리로 이동
# %cd /content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/data/example

from google.colab import drive
drive.mount('/content/drive')

# 3. Drive에서 metadata.list와 wav 파일들이 들어있는 폴더 경로 설정
drive_data_path = "/content/drive/MyDrive/Colab Notebooks/MeloTTS-main/melo/data/example"

# 4. MeloTTS 프로젝트 내의 학습용 데이터 경로로 연결 (심볼릭 링크)
!rm -rf melo/data/example  # 기존 example 폴더 제거 (있을 경우)
!ln -s "{drive_data_path}" melo/data/example

# 5. 전처리 실행
!python melo/preprocess_text.py --metadata melo/data/example/metadata.list

# 6. 학습 실행 (config.json은 드라이브 안에 있다고 가정)
!python melo/train.py --config melo/data/example/config.json

from google.colab import drive
drive.mount('/content/drive')







